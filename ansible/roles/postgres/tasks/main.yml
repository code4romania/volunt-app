---
- name: install packages needed by Ansible for postgres
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - python-dev
    - python-psycopg2
  become: yes

- name: add postgres server key
  apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
    state: present
  when: ENV == "development"
  become: yes

- name: add postgres repo
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main"
    state: present
    update_cache: yes
  when: ENV == "development"
  become: yes

- name: install postgres
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - postgresql-{{ postgres_version }}
    - postgresql-server-dev-{{ postgres_version }}
  when: ENV == "development"
  become: yes

- name: start postgres server
  systemd:
    name: postgresql@{{ postgres_version}}-main
    state: started
    enabled: yes
  when: ENV == "development"
  become: yes

- name: install libpq-dev for ruby gem pg
  apt:
    name: libpq-dev
    state: present
  when: ENV != "development"
  become: yes

  # We only use it to create the app user and db
- name: create disposable superuser role
  postgresql_user:
    name: "{{ postgres_master_user }}"
    password: "{{ postgres_master_password }}"
    encrypted: yes
    role_attr_flags: SUPERUSER
    state: present
  when: ENV == "development"
  become: yes
  become_user: postgres

- name: create database for superuser
  postgresql_db:
    db: "{{ postgres_master_user }}"
    owner: "{{ postgres_master_user }}"
    state: present
  when: ENV == "development"
  become: yes
  become_user: postgres

- name: create app database role
  postgresql_user:
    port: "{{ postgres_port }}"
    login_host: "{{ postgres_host }}"
    login_user: "{{ postgres_master_user }}"
    login_password: "{{ postgres_master_password }}"
    name: "{{ postgres_user }}"
    password: "{{ postgres_password }}"
    no_password_changes: true
    encrypted: yes
    role_attr_flags: CREATEDB
    state: present

- name: create app database
  postgresql_db:
    port: "{{ postgres_port }}"
    login_host: "{{ postgres_host }}"
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
    name: "{{ postgres_db }}"
    owner: "{{ postgres_user }}"
    state: present

- name: load db extensions
  postgresql_ext:
    port: "{{ postgres_port }}"
    login_host: "{{ postgres_host }}"
    login_user: "{{ postgres_master_user }}"
    login_password: "{{ postgres_master_password }}"
    db: "{{ postgres_db }}"
    name: "{{ item }}"
    state: present
  with_items: "{{ postgres_extensions }}"
  when: postgres_load_extensions
